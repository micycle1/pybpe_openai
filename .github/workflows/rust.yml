name: Build Python wheels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release
          working-directory: pybpe_openai

      - name: Test built wheel
        shell: bash
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate 2>/dev/null || source venv/Scripts/activate
          pip install pybpe_openai/target/wheels/*.whl
          python -c "import pybpe_openai; print('Import worked')"
          python -c "import pybpe_openai; print(pybpe_openai.cl100k().count('hello'))"

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-cp${{ matrix.python-version }}
          path: pybpe_openai/target/wheels/*.whl

  collect:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          # Download all wheel artifacts from the build job
          name: ""
          path: collected_wheels

      - name: List all wheels
        run: ls -lhR collected_wheels

      - uses: actions/upload-artifact@v4
        with:
          name: all-wheels
          path: collected_wheels/**/*.whl

      - name: Install Twine
        run: pip install --upgrade twine

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ collected_wheels/**/*.whl
